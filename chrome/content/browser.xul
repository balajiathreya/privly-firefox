<?xml version="1.0"?>
<?xml-stylesheet href="chrome://privly/skin/skin.css" type="text/css"?> 
<!DOCTYPE privly SYSTEM "chrome://privly/locale/translations.dtd">
<overlay id="privly" xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  
  <script src="extension-host-interface.js" />
  <script src="posting-process.js" />
  
  <menupopup id="contentAreaContextMenu">
    <menuseparator id="postingMenuSeparator" />
    <menuitem id="publicPostToPrivlyMenuItem" label="Create a Privly Post" oncommand="privlyExtensionPosting.contextmenuPost('/posts/plain_post')" image="chrome://privly/skin/logo_64.png" class="menuitem-iconic" />
    <menuitem id="encryptedPostToPrivlyMenuItem" label="Create a ZeroBin Post" oncommand="privlyExtensionPosting.contextmenuPost('/zero_bin/')" image="chrome://privly/skin/logo_64.png" class="menuitem-iconic" />
  </menupopup>
  
  <keyset id="mainKeyset">
      <key id="zero_bin_post_key" key="." modifiers="accel alt" oncommand="privlyExtensionPosting.keyboardPost('/posts/plain_post')" />
      <key id="plain_post_post_key" key="," modifiers="accel alt" oncommand="privlyExtensionPosting.keyboardPost('/zero_bin/')" />
  </keyset>
  
  <toolbarpalette id="BrowserToolbarPalette">
    <toolbarbutton id="privly-tlbr-btn" insertafter="search-container" label="Privly" tooltiptext="Privly" oncommand="privlyExtension.toggleExtensionMode()"/>
  </toolbarpalette>
  
  <vbox id="appcontent">
    <splitter id="post-splitter" class="chromeclass-extrachrome" hidden="true"/>
    <vbox id="post-iframe-vbox" class="chromeclass-extrachrome" hidden="true" persist="height">
      <iframe id="post-iframe" flex="1" src="" type="content-targetable" />
    </vbox>
    <button id="post-cancel-button" label="Cancel Post"
      oncommand="privlyExtensionPosting.closePostingApplication();" hidden="true" />
  </vbox>
  
  <window title="Library Integration Code" id="test-window"
      xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
    
    <script>
      
      // Standard mozilla ctypes interface
      // For Further Reference
      // https://developer.mozilla.org/en-US/docs/Mozilla/js-ctypes
      Components.utils.import("resource://gre/modules/ctypes.jsm");
      
      // CHANGE THIS TO THE LIBRARY's PATH: see "library search paths"
      // https://developer.mozilla.org/en-US/docs/Mozilla/js-ctypes/Using_js-ctypes
      // var library = ctypes.open("library_sitting_in_path_path");
      
      // Declare types
      // stdAlert = library.declare(...);
      
      // Use types
      // var err = stdAlert(1, msgErr, msgExp, 0, hit);
      
      // At this point you should do whatever you want to do with the library.
      // I recommend using the alert box approach to debug since it doesn't
      // require any interfacing with the XUL page. Call "alert(string)"
      // for any string you want to test. The string will alert anytime you
      // open a new Firefox window. You must close and reopen Firefox for
      // changes in this file to take effect.
      alert("change me");
      
      // close the library
      // library.close();
      
    </script>
    
  </window>
  
  
  
</overlay>
